apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "enterprise-metrics.queryFrontendFullname" . }}
  annotations:
    {{- with .Values.queryFrontend.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- include "enterprise-metrics.queryFrontendLabels" . | nindent 4 }}
    {{- with .Values.queryFrontend.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.queryFrontend.replicas }}
  selector:
    matchLabels:
      {{- include "enterprise-metrics.queryFrontendSelectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.queryFrontend.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "enterprise-metrics.queryFrontendSelectorLabels" . | nindent 8 }}
        {{- with .Values.queryFrontend.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.useExternalConfig }}
        checksum/config: {{ .Values.externalConfigVersion }}
        {{- else }}
        checksum/config: {{ include (print $.Template.BasePath "/secret-config.yaml") . | sha256sum }}
        {{- end}}
        {{- with .Values.queryFrontend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "enterprise-metrics.serviceAccountName" . }}
    {{- if .Values.queryFrontend.priorityClassName }}
      priorityClassName: {{ .Values.queryFrontend.priorityClassName }}
    {{- end }}
      securityContext:
        fsGroup: 10001
      initContainers:
        {{- toYaml .Values.queryFrontend.initContainers | nindent 8 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ template "enterprise-metrics.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-target=query-frontend"
            - "-config.file=/etc/enterprise-metrics/enterprise-metrics.yaml"
          {{- if .Values.minio.enabled }}
            - -admin.client.backend-type=s3
            - -admin.client.s3.endpoint={{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc:9000
            - -admin.client.s3.bucket-name=enterprise-metrics-admin
            - -admin.client.s3.access-key-id=enterprise-metrics
            - -admin.client.s3.secret-access-key=supersecret
            - -admin.client.s3.insecure=true
          {{- end }}
          {{- range $key, $value := .Values.queryFrontend.extraArgs }}
            - "-{{ $key }}={{ $value }}"
          {{- end }}
          volumeMounts:
            {{- if .Values.queryFrontend.extraVolumeMounts }}
              {{ toYaml .Values.queryFrontend.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: runtime-config
              mountPath: /var/enterprise-metrics
            - name: license
              mountPath: /license
            - name: config
              mountPath: /etc/enterprise-metrics
          ports:
            - name: http-metrics
              containerPort: {{ .Values.config.server.http_listen_port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.config.server.grpc_listen_port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.queryFrontend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.queryFrontend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.queryFrontend.resources | nindent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
            {{- toYaml .Values.queryFrontend.securityContext | nindent 12 }}
          env:
            {{- if .Values.queryFrontend.env }}
              {{- toYaml .Values.queryFrontend.env | nindent 12 }}
            {{- end }}
{{- if .Values.queryFrontend.extraContainers }}
{{ toYaml .Values.queryFrontend.extraContainers | indent 8}}
{{- end }}
      nodeSelector:
        {{- toYaml .Values.queryFrontend.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.queryFrontend.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.queryFrontend.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.queryFrontend.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          secret:
{{- if .Values.useExternalConfig }}
            secretName: {{ .Values.externalConfigSecretName }}
{{- else }}
            secretName: {{ template "enterprise-metrics.fullname" . }}
{{- end }}
        - name: runtime-config
          configMap:
            name: {{ template "enterprise-metrics.fullname" . }}-runtime
        - name: license
          secret:
            secretName: {{ .Values.license.secretName }}
{{- if .Values.queryFrontend.extraVolumes }}
{{ toYaml .Values.queryFrontend.extraVolumes | indent 8}}
{{- end }}
