apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "enterprise-metrics.adminApiFullname" . }}
  annotations:
    {{- with .Values.adminApi.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- include "enterprise-metrics.adminApiLabels" . | nindent 4 }}
    {{- with .Values.adminApi.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.adminApi.replicas }}
  selector:
    matchLabels:
      {{- include "enterprise-metrics.adminApiSelectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.adminApi.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: memberlist
        {{- include "enterprise-metrics.adminApiSelectorLabels" . | nindent 8 }}
        {{- with .Values.adminApi.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.useExternalConfig }}
        checksum/config: {{ .Values.externalConfigVersion }}
        {{- else }}
        checksum/config: {{ include (print $.Template.BasePath "/secret-config.yaml") . | sha256sum }}
        {{- end}}
        {{- with .Values.adminApi.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "enterprise-metrics.serviceAccountName" . }}
      {{- if .Values.adminApi.priorityClassName }}
      priorityClassName: {{ .Values.adminApi.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.adminApi.securityContext | nindent 8 }}
      initContainers:
        {{- with .Values.adminApi.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.minio.enabled }}
        # Taken from
        # https://github.com/minio/charts/blob/a5c84bcbad884728bff5c9c23541f936d57a13b3/minio/templates/post-install-create-bucket-job.yaml
      {{- if .Values.minio.enabled }}
        - name: minio-mc
          image: "{{ .Values.minio.mcImage.repository }}:{{ .Values.minio.mcImage.tag }}"
          imagePullPolicy: {{ .Values.minio.mcImage.pullPolicy }}
          command: ["/bin/sh", "/config/initialize"]
          env:
            - name: MINIO_ENDPOINT
              value: {{ .Release.Name }}-minio
            - name: MINIO_PORT
              value: {{ .Values.minio.service.port | quote }}
          volumeMounts:
            - name: minio-configuration
              mountPath: /config
          {{- if .Values.minio.tls.enabled }}
            - name: cert-secret-volume-mc
              mountPath: {{ .Values.minio.configPathmc }}certs
          {{ end }}
        {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ template "enterprise-metrics.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-target=admin-api"
            - "-config.file=/etc/enterprise-metrics/enterprise-metrics.yaml"
            - "-memberlist.join={{ template "enterprise-metrics.fullname" . }}-memberlist"
            {{- if .Values.minio.enabled }}
            - -admin.client.backend-type=s3
            - -admin.client.s3.endpoint={{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc:9000
            - -admin.client.s3.bucket-name=enterprise-metrics-admin
            - -admin.client.s3.access-key-id=enterprise-metrics
            - -admin.client.s3.secret-access-key=supersecret
            - -admin.client.s3.insecure=true
            {{- end }}
            {{- range $key, $value := .Values.adminApi.extraArgs }}
            - "-{{ $key }}={{ $value }}"
            {{- end }}
          volumeMounts:
            {{- if .Values.adminApi.extraVolumeMounts }}
              {{ toYaml .Values.adminApi.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/enterprise-metrics
            - name: runtime-config
              mountPath: /var/enterprise-metrics
            - name: license
              mountPath: /license
            - name: storage
              mountPath: "/data"
              subPath: {{ .Values.adminApi.persistence.subPath }}
          ports:
            - name: http-metrics
              containerPort: {{ .Values.config.server.http_listen_port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.config.server.grpc_listen_port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.adminApi.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.adminApi.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.adminApi.resources | nindent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
          env:
            {{- if .Values.adminApi.env }}
            {{ toYaml .Values.adminApi.env | nindent 12 }}
            {{- end }}
        {{- with .Values.adminApi.extraContainers }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.adminApi.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.adminApi.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.adminApi.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.adminApi.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          secret:
          {{- if .Values.useExternalConfig }}
            secretName: {{ .Values.externalConfigSecretName }}
          {{- else }}
            secretName: {{ template "enterprise-metrics.fullname" . }}
          {{- end }}
        - name: runtime-config
          configMap:
            name: {{ template "enterprise-metrics.fullname" . }}-runtime
        {{- if .Values.adminApi.extraVolumes }}
        {{ toYaml .Values.adminApi.extraVolumes | nindent 8}}
        {{- end }}
        - name: license
          secret:
            secretName: {{ .Values.license.secretName }}
        - name: storage
          emptyDir: {}
        {{- if .Values.minio.enabled }}
        - name: minio-configuration
          projected:
            sources:
            - configMap:
                name: {{ .Release.Name }}-minio
            - secret:
                name: {{ .Release.Name }}-minio
        {{- if .Values.minio.tls.enabled }}
        - name: cert-secret-volume-mc
          secret:
            secretName: {{ .Values.minio.tls.certSecret }}
            items:
            - key: {{ .Values.minio.tls.publicCrt }}
              path: CAs/public.crt
        {{- end }}
        {{- end }}
